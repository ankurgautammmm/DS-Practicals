#include <stdio.h>
#include <stdlib.h>
#define MAX 7
struct Stack {
    int arr[MAX];
      int top; 
};
void initStack(struct Stack* stack) {
    stack->top = -1;  
}
int isFull(struct Stack* stack) {
    return stack->top == MAX - 1;
}
int isEmpty(struct Stack* stack) {
    return stack->top == -1;
}
void push(struct Stack* stack, int value) {
    if (isFull(stack)) {
        printf("Stack Overflow: Cannot push %d, the stack is full!\n", value);
    } else {
        stack->arr[++stack->top] = value;
        printf("Pushed %d onto the stack\n", value);
    }
}
int pop(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack Underflow: Cannot pop, the stack is empty!\n");
        return -1; 
    } else {
        int poppedValue = stack->arr[stack->top--];
        printf("Popped %d from the stack\n", poppedValue);
        return poppedValue;
    }
}
int peek(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("The stack is empty!\n");
        return -1; 
    } else {
        return stack->arr[stack->top];
    }
}
int main() {
    struct Stack stack;
    initStack(&stack);
    push(&stack, 55);
    push(&stack, 56);
    push(&stack, 57);
    push(&stack, 58);
    push(&stack, 59);
    push(&stack, 70);
    printf("Top element is %d\n", peek(&stack));
    pop(&stack);
    pop(&stack);
    printf("Top element after popping is %d\n", peek(&stack));
     return 0;
}
