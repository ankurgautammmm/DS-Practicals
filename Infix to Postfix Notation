#include <stdio.h>
#include <ctype.h>

#define MAX 100
char stack[MAX];
int top = -1;

int precedence(char c) {
    return (c == '+' || c == '-') ? 1 : (c == '*' || c == '/') ? 2 : 0;
}

void push(char c) { stack[++top] = c; }
char pop() { return stack[top--]; }

void infixToPostfix(char* expr) {
    int i = 0, k = 0;
    char postfix[MAX];
    
    while (expr[i]) {
        if (isalnum(expr[i])) {
            postfix[k++] = expr[i++];
        } else if (expr[i] == '(') {
            push(expr[i++]);
        } else if (expr[i] == ')') {
            while (top != -1 && stack[top] != '(')
                postfix[k++] = pop();
            top--;
            i++;
        } else {
            while (top != -1 && precedence(stack[top]) >= precedence(expr[i]))
                postfix[k++] = pop();
            push(expr[i++]);
        }
    }

    while (top != -1)
        postfix[k++] = pop();

    postfix[k] = '\0';
    printf("Postfix: %s\n", postfix);
}

int main() {
    char expr[MAX];
    printf("Enter infix expression: ");
    scanf("%[^\n]s", expr);
    infixToPostfix(expr);
    return 0;
}
